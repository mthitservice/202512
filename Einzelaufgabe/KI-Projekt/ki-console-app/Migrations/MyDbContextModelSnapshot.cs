// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ki_console_app.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kiconsoleapp.models.cls_disciplin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Disciplins", (string)null);
                });

            modelBuilder.Entity("kiconsoleapp.models.cls_event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("disciplinid")
                        .HasColumnType("int");

                    b.Property<float>("elevation")
                        .HasColumnType("real");

                    b.Property<DateTime>("event_day")
                        .HasColumnType("datetime2");

                    b.Property<float>("latitude")
                        .HasColumnType("real");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("longitude")
                        .HasColumnType("real");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("disciplinid");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("kiconsoleapp.models.cls_record", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<float>("Distance")
                        .HasColumnType("real");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.Property<string>("club")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("record_day")
                        .HasColumnType("datetime2");

                    b.Property<int>("sportseventid")
                        .HasColumnType("int");

                    b.Property<int>("timeinSecond")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("sportseventid");

                    b.ToTable("Records", (string)null);
                });

            modelBuilder.Entity("kiconsoleapp.models.cls_event", b =>
                {
                    b.HasOne("kiconsoleapp.models.cls_disciplin", "disciplin")
                        .WithMany("Events")
                        .HasForeignKey("disciplinid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("disciplin");
                });

            modelBuilder.Entity("kiconsoleapp.models.cls_record", b =>
                {
                    b.HasOne("kiconsoleapp.models.cls_event", "sportsevent")
                        .WithMany("Records")
                        .HasForeignKey("sportseventid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sportsevent");
                });

            modelBuilder.Entity("kiconsoleapp.models.cls_disciplin", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("kiconsoleapp.models.cls_event", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
